import React, { useState, useEffect, useRef } from "react";
import Box from "@mui/material/Box";
import StarIcon from "@mui/icons-material/Star";

const MyLinearProgress = () => {
  const [progress, setProgress] = useState(0);
  const [isLoading, setIsLoading] = useState(false);
  const progressRef = useRef(null);

  useEffect(() => {
    const observer = new IntersectionObserver(
      ([entry]) => {
        setIsLoading(entry.isIntersecting);
        if (!entry.isIntersecting) {
          setProgress(0);
        }
      },
      { threshold: 0.1 }
    );

    if (progressRef.current) {
      observer.observe(progressRef.current);
    }

    return () => {
      if (progressRef.current) {
        observer.unobserve(progressRef.current);
      }
    };
  }, []);

  useEffect(() => {
    let timer;

    if (isLoading) {
      timer = setInterval(() => {
        setProgress((prevProgress) => Math.min(prevProgress + 1, 80));
      }, 5);
    }

    return () => {
      clearInterval(timer);
    };
  }, [isLoading]);

  const starIconStyle = {
    color: progress >= 80 ? "#2196f3" : "#dcdcdc",
    fontSize: "2rem",
  };

  const stars = Array(5)
    .fill()
    .map((_, index) => <StarIcon key={index} sx={starIconStyle} />);

  return (
    <Box ref={progressRef}>
      {isLoading && (
        <>
          {stars}
          <br />
          {stars.slice(0, 4)}
        </>
      )}
    </Box>
  );
};

export default MyLinearProgress;
